@model WebAppBook.Models.BookViewModel

@{
    ViewBag.Title = "Edição Livro";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Informações do Livro</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.isbn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.isbn, new { htmlAttributes = new { @class = "form-control", @maxlength = "13" } })
                @Html.ValidationMessageFor(model => model.isbn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control", @maxlength = "80" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.author, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.author, new { htmlAttributes = new { @class = "form-control", @maxlength = "80" } })
                @Html.ValidationMessageFor(model => model.author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.publisher, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.publisher, new { htmlAttributes = new { @class = "form-control", @maxlength = "60" } })
                @Html.ValidationMessageFor(model => model.publisher, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control", @maxlength = "150" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.synopsis, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.synopsis, new { htmlAttributes = new { @class = "form-control", @maxlength = "450" } })
                @Html.ValidationMessageFor(model => model.synopsis, "", new { @class = "text-danger" })
            </div>
        </div>

        <td id="btnPut" style="text-align:center;">
            <a href="javascript:PutBook();" class="btn btn-sm btn-success" data-toggle="tooltip" title="Salvar">
                <label class="glyphicon glyphicon glyphicon glyphicon-ok"/>
            </a>
        </td>
        <td id="btnCancel" style="text-align:center;">
            <a href="/Book/Index" class="btn btn-sm btn-danger" data-toggle="tooltip" title="Cancelar">
                <label class="glyphicon glyphicon glyphicon-remove" />
            </a>
        </td>
    </div>
}
<script type="text/javascript">
    $("input[data-val-length-max]").each(function (index, element) {
        var length = parseInt($(this).attr("data-val-length-max"));
        $(this).prop("maxlength", length);
    });

    function PutBook() {
        var bookModel =
            {
                id: parseInt($('#id').val()),
                isbn: $('#isbn').val(),
                title: $('#title').val(),
                author: $('#author').val(),
                publisher: $('#publisher').val(),
                description: $('#description').val(),
                synopsis: $('#synopsis').val()
            };

        $.ajax({
            url: '/Book/PutBook',
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(bookModel),
            success: function (retorno, b, c) {
                if (retorno && retorno.success) {
                    alert('Livro com ID "' + bookModel.title + '" foi salvo com sucesso.');
                    window.location.href = retorno.redirecturl;
                } else {
                    alert('Não foi possível salvar o livro "' + bookModel.title + '", mensagem de erro: ' + retorno.message);
                }
            }
        });
    }
</script>